A) Write a java Program in Hibernate to display “Hello world” message.
Solution:

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HelloWorld {
    public static void main(String[] args) {
        // Create configuration object and configure Hibernate
        Configuration configuration = new Configuration().configure();
        // Create session factory
        SessionFactory sessionFactory = configuration.buildSessionFactory();
        // Open a session
        Session session = sessionFactory.openSession();
        // Display "Hello world" message
        System.out.println("Hello world");
        // Close the session and session factory
        session.close();
        sessionFactory.close();
    }
}
----------------------------
B) Write a SERVLET program to display the details of Product (ProdCode, PName, Price) on the browser in tabular format. (Use database)
Solution:

Html file:
<html>
<title>Product Details</title>
<body>
<form name="f1" action="sofiya" method="get">
<input type="Submit" value="Submit" name="s1">
</form>
</body>
</html>

Xml File:
<web-app>

	<servlet>
      <servlet-name>girl</servlet-name>
      <servlet-class>ProductListServlet</servlet-class>
    </servlet>
	<servlet-mapping>
        <servlet-name>girl</servlet-name>
        <url-pattern>/sofiya</url-pattern>
    </servlet-mapping>
</web-app>

Java File:
import java.io.*;
 import jakarta.servlet.*;
 import jakarta.servlet.http.*;
 import java.sql.*; 
 public class ProductListServlet extends HttpServlet{ 
	private Connection con; 
	private Statement s;
	private ResultSet rs ; 
	
	public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException
	{ 
		res.setContentType("text/html");
		
		PrintWriter out = res.getWriter(); 
		
		try
		{ 
			Class.forName("com.mysql.jdbc.Driver");  
	
			con=DriverManager.getConnection("jdbc:mysql://localhost:3306/testdb","root",""); 
			
			
			s = con.createStatement(); 
			rs = s.executeQuery("select * from product"); 
			out.print("<table border =1 bgcolor='yellow>"+ "etr bgcolor='red'>"+ "<th>Code</th><th>Name</th><th>Price</th></tr>") ;
		
			while(rs.next())
			{ 
				out.print("<tr>"+ 
				"<td>"+rs.getInt(1)+"</td>"+
				"<td>"+rs.getString( 2)+"</td>"+
				"<td>"+rs.getFloat(3)+"</td>"+ 
				"</tr>"); 
			}
			out.print("</table>") ; 
		}
		catch(Exception e)
		{ 
			out.print(e);
		}
	}
}
------------------------
A) Write a program that demonstrates the use of primitive data types in C#. The

 program should also support the type conversion of :

● Integer to String

● String to Integer

Answer :

namespace WinFormsApp19

{

    public partial class Form1 : Form

    {

        public Form1()

        {

            InitializeComponent();

        }

 

        private void button1_Click(object sender, EventArgs e)

        {

            int num = Convert.ToInt32(textBox1.Text);

            label1.Text = "Before conversion  : " + num.GetType();

            String str = Convert.ToString(num);

            label2.Text = "After conversion: " + str.GetType();

 

        }

 

        private void button2_Click(object sender, EventArgs e)

        {

            label1.Text = "Before conversion  : " + textBox1.Text.GetType();

            int num = Convert.ToInt32(textBox1.Text);

            label2.Text = "After conversion: " + num.GetType();

        }

    }

}
-------------------------------------
F) Write ASP.Net program to connect to the master database in SQL Server in the Page_Load event. When the connection is established, the message “Connection has been established” should be displayed in a label in the form .
Solution:
Default.aspx
<asp:Label ID="lblMessage" runat="server"></asp:Label>


In the Default.aspx.cs file, add the following code in the Page_Load event:

protected void Page_Load(object sender, EventArgs e)
{
    string connectionString = "Data Source=myServerAddress;Initial Catalog=master;User ID=myUsername;Password=myPassword;";
    SqlConnection connection = new SqlConnection(connectionString);

    try
    {
        connection.Open();
        lblMessage.Text = "Connection has been established";
    }
    catch (Exception ex)
    {
        lblMessage.Text = "Error: " + ex.Message;
    }
    finally
    {
        connection.Close();
    }
}
